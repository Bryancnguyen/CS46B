Lab 03 - Bryan (Scribe) (Driver) Section 15Part A.1. $9,000 , $65,0002. $615384.62     Total / annual percentage * new annual percentage.3.  	Scanner in = new Scanner(cpiIn);  while (in.hasNext())  {   int Year = in.nextInt();   cpi[Year - FIRST_YEAR ] = in.nextDouble();  }Q1-Scanner method = Scanner in = new Scanner(cpiIn);Q2- in.hasNext();Q3- You use hasNext to check the int and store it and move on to the next line.Q4- in.nextInt() will move the cursor to the beginning of the next int.Q5- By using the loop it will check until it gets to the end of file.	Part B.1. Done.2. It will give you the correct amount when you add 1. 3. import java.net.MalformedURLException;4. Hover over the MalformedUrlException and initiate an IOexception.5. 	cpi = new double[LAST_YEAR - FIRST_YEAR + 1]; 	URL cpiURL = new URL(location);	InputStream cpiIn = cpiURL.openStream();6.(amount / cpi[fromYear - FIRST_YEAR]) * cpi[toYear - FIRST_YEAR];7. You need to throw an IOException.8. $615384.62  it is the same amount.9. The value is null10. 23 is the value in cpi.11. [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]12. 34 is the value in cpi.13. The debug terminates and shows the value of 615384Extra Question: $710,158